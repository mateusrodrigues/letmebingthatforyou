@using System.Net;

@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="url-container">
    <div class="url-content @(isCopied ? "copied" : "")">
        <div class="header">
            <h2>Share your Bing tutorial</h2>
            <p class="subtitle">Help others learn how to search efficiently</p>
        </div>
        <div class="url-box">
            <div class="input-container">
                <input id="lmbtfyLink" @bind="@TinyUrl" readonly 
                       class="@(isCopied ? "success" : "")"
                       title="Click the copy button to copy this URL" />
                <div class="copy-success @(isCopied ? "show" : "")">
                    <i class="fas fa-check"></i>
                    <span>Copied!</span>
                </div>
            </div>
            <button class="copy-button" @onclick="CopyToClipboard"
                    title="Copy URL to clipboard">
                <i class="@(isCopied ? "fas fa-check" : "fas fa-copy")"></i>
            </button>
        </div>
        <div class="url-info">
            <div class="divider">
                <span>or use the direct link</span>
            </div>
            <a href="@Url" class="direct-link" title="Direct URL"
               target="_blank" rel="noopener noreferrer">
                @Url
                <i class="fas fa-external-link-alt"></i>
            </a>
            <div class="powered-by">
                <i class="fas fa-link"></i>
                <small>Shortened by <a href="https://tinyurl.com" target="_blank" rel="noopener noreferrer">TinyURL.com</a></small>
            </div>
        </div>
    </div>
</div>

<style>
    .url-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100%;
        padding: 2rem;
        box-sizing: border-box;
    }

    .url-content {
        background: rgba(0, 0, 0, 0.85);
        padding: 2.5rem;
        border-radius: 12px;
        width: 100%;
        max-width: 600px;
        text-align: center;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .url-content.copied {
        transform: scale(1.02);
        box-shadow: 0 12px 48px rgba(0, 188, 242, 0.3);
    }

    .header {
        margin-bottom: 2rem;
    }

    h2 {
        color: #fff;
        font-family: "Segoe UI", Arial, sans-serif;
        font-weight: 600;
        margin: 0 0 0.5rem;
        font-size: 28px;
    }

    .subtitle {
        color: rgba(255, 255, 255, 0.8);
        margin: 0;
        font-size: 16px;
    }

    .url-box {
        display: flex;
        margin-bottom: 2rem;
        gap: 12px;
        align-items: stretch;
    }

    .input-container {
        position: relative;
        flex: 1;
        min-width: 0; /* Prevents flex item from overflowing */
    }

    #lmbtfyLink {
        width: 100%;
        height: 50px;
        padding: 0 14px;
        border: 2px solid rgba(255, 255, 255, 0.1);
        background: rgba(0, 0, 0, 0.2);
        border-radius: 6px;
        font-size: 16px;
        color: #fff;
        transition: all 0.3s ease;
        box-sizing: border-box;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #lmbtfyLink:focus {
        outline: none;
        border-color: rgba(0, 188, 242, 0.5);
        background: rgba(0, 0, 0, 0.3);
    }

    #lmbtfyLink.success {
        border-color: #28a745;
    }

    .copy-success {
        position: absolute;
        top: -30px;
        left: 50%;
        transform: translateX(-50%) translateY(-10px);
        background: rgba(40, 167, 69, 0.9);
        color: white;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 14px;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .copy-success.show {
        opacity: 1;
        visibility: visible;
        transform: translateX(-50%) translateY(0);
    }

    .copy-button {
        background: #00BCF2;
        border: none;
        border-radius: 6px;
        width: 50px;
        height: 50px;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .copy-button:hover {
        background: #00A2D3;
        transform: translateY(-1px);
    }

    .copy-button:active {
        transform: translateY(1px);
    }

    .url-info {
        color: #fff;
        font-family: "Segoe UI", Arial, sans-serif;
    }

    .divider {
        position: relative;
        text-align: center;
        margin: 2rem 0;
    }

    .divider::before,
    .divider::after {
        content: "";
        position: absolute;
        top: 50%;
        width: calc(50% - 100px);
        height: 1px;
        background: rgba(255, 255, 255, 0.1);
    }

    .divider::before {
        left: 0;
    }

    .divider::after {
        right: 0;
    }

    .divider span {
        background: rgba(0, 0, 0, 0.85);
        background: inherit;
        padding: 0 20px;
        color: rgba(255, 255, 255, 0.7);
        font-size: 14px;
    }

    .direct-link {
        color: #00BCF2;
        text-decoration: none;
        word-break: break-all;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        padding: 8px 16px;
        background: rgba(0, 188, 242, 0.15);
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .direct-link:hover {
        text-decoration: none;
        background: rgba(0, 188, 242, 0.25);
    }

    .direct-link i {
        font-size: 12px;
        opacity: 0.7;
    }

    .powered-by {
        margin-top: 2rem;
        color: rgba(255, 255, 255, 0.5);
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .powered-by a {
        color: rgba(0, 188, 242, 0.8);
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .powered-by a:hover {
        color: #00BCF2;
    }

    .powered-by i {
        font-size: 12px;
    }

    @@media (max-width: 480px) {
        .url-container {
            padding: 1rem;
        }

        .url-content {
            padding: 1.5rem;
        }

        h2 {
            font-size: 24px;
        }

        .subtitle {
            font-size: 14px;
        }

        .divider::before,
        .divider::after {
            width: calc(50% - 80px);
        }
    }
</style>

@code {
    [Parameter]
    public string? Query { get; set; }

    public string? Url { get; set; }

    public string? TinyUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Url = NavigationManager.BaseUri + $"BingThis/{Query}";
        TinyUrl = await GenerateTinyUrl(Url);
    }

    private bool isCopied = false;

    private async Task CopyToClipboard()
    {
        if (string.IsNullOrEmpty(TinyUrl)) return;
        
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", TinyUrl);
            isCopied = true;
            StateHasChanged();

            // Reset the copied state after 3 seconds
            await Task.Delay(3000);
            isCopied = false;
            StateHasChanged();
        }
        catch
        {
            // Handle copy error if needed
        }
    }

    private async Task<string> GenerateTinyUrl(string? realUrl)
    {
        if (string.IsNullOrEmpty(realUrl)) return string.Empty;

        var client = ClientFactory.CreateClient("TinyUrl");
        var response = await client.GetAsync("api-create.php?url=" + realUrl);

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            return content;
        }

        return "ERROR";
    }
}
